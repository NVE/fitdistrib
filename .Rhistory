library(fitdistrib)
warnings()
?gev_mle
gev_mle(evd::rgev(10000, loc=0, scale=1, shape=0))
GLOBAL_min_years_data <- 30
gev_mle(evd::rgev(10000, loc=0, scale=1, shape=0))
?gev_bayes
packages <- c('RNetCDF', 'evd', 'ismev', 'pracma', 'nsRFA', 'fBasics', 'stats4', 'MASS', 'glogis', 'fitdistrplus', 'plyr')
# installing and loading libraries if required
for(package in packages){
# if package is installed locally, load
if(package %in% rownames(installed.packages()))
do.call('library', list(package))
# if package is not installed locally, download, then load
else {
install.packages(package)
do.call("library", list(package))
}
}
library(fitdistrib)
library('fitdistrib')
?gev_bayes
gev_mle()
gev_mle
?gev_mle
gev_mle(evd::rgev(10000, loc=0, scale=1, shape=0))
GLOBAL_min_years_data <- 30
gev_mle(evd::rgev(10000, loc=0, scale=1, shape=0))
library(fitdistrib)
GLOBAL_min_years_data <- 30
gev_mle(evd::rgev(10000, loc=0, scale=1, shape=0))
library(fitdistrib)
GLOBAL_min_years_data <- 30
gev_mle(evd::rgev(10000, loc=0, scale=1, shape=0))
R.Version()
library('Rtools')
library(fitdistrib)
?fitdistrib
?fitdistri
?gev_bayes
library(fitdistrib)
?gev_bayes
GLOBAL_min_years_data <- 30
gev_mle(evd::rgev(10000, loc=0, scale=1, shape=0))
?gev_Lmom
gev_Lmom(evd::rgev(10000, loc=0, scale=1, shape=0))
library(fitdistrib)
GLOBAL_min_years_data <- 30
gev_Lmom(evd::rgev(10000, loc=0, scale=1, shape=0))
library(fitdistrib)
GLOBAL_min_years_data <- 30
gev_Lmom(evd::rgev(10000, loc=0, scale=1, shape=0))
library(fitdistrib)
GLOBAL_min_years_data <- 30
gev_Lmom(evd::rgev(10000, loc=0, scale=1, shape=0))
gev_mle(evd::rgev(10000, loc=0, scale=1, shape=0))
library(fitdistrib)
GLOBAL_min_years_data <- 30
gev_mle(evd::rgev(10000, loc=0, scale=1, shape=0))
gev_Lmom(evd::rgev(10000, loc=0, scale=1, shape=0))
gev_mom(evd::rgev(10000, loc=0, scale=1, shape=0))
library(fitdistrib)
GLOBAL_min_years_data <- 30
gev_mom(evd::rgev(10000, loc=0, scale=1, shape=0))
gev_bayes(evd::rgev(10000, loc=0, scale=1, shape=0))
library(fitdistrib)
GLOBAL_min_years_data <- 30
gev_bayes(evd::rgev(10000, loc=0, scale=1, shape=0))
library(devtools)
install_github("fbaffie/fitdistrib")
install_github("fbaffie/fitdistrib")
install.packages("roxygen2")
install.packages("roxygen2")
library(fitdistrib)
GLOBAL_min_years_data <- 30
gev_bayes(evd::rgev(10000, loc=0, scale=1, shape=0))
gev_mom(evd::rgev(10000, loc=0, scale=1, shape=0))
install_github("fbaffie/fitdistrib")
library(devtools)
install_github("fbaffie/fitdistrib")
gev_mom(evd::rgev(10000, loc=0, scale=1, shape=0))
gev_bayes(evd::rgev(10000, loc=0, scale=1, shape=0))
rand.genlogis(1000, 0, 1, 1)
library(fitdistrib)
GLOBAL_min_years_data <- 30
?gl_mle
gl_mle(rand.genlogis(1000, 0, 1, 1))
gl_mle(nsRFA::rand.genlogis(1000, 0, 1, 1))
test <- gl_mle(nsRFA::rand.genlogis(1000, 0, 1, 1))
test
dat <- nsRFA::rand.genlogis(1000, 0, 1, 1)
dat
test <- gl_mle(dat)
test
head(dat)
test <- gl_Lmom(nsRFAS::rand.genlogis(1000, 0, 1, 1))
test <- gl_Lmom(nsRFA::rand.genlogis(1000, 0, 1, 1))
test
test <- gl_Lmom(rglogis(1000, location = 0, scale = 1, shape = 1))
library(glogis)
test <- gl_Lmom(rglogis(1000, location = 0, scale = 1, shape = 1))
test
test <- gl_Lmom(rglogis(1000, location = 0, scale = 1, shape = 1))
test
test <- gl_Lmom(nsRFA::rand.genlogis(1000, 0, 1, 1))
test
gl_mom(nsRFA::rand.genlogis(1000, 0, 1, 1))
gl_bayes(nsRFA::rand.genlogis(1000, 0, 1, 1))
test <- gl_bayes(nsRFA::rand.genlogis(1000, 0, 1, 1))
test
devtools::use_testthat()
?test_that
gev_mle(evd::rgev(10000, loc=0, scale=1, shape=0))
test <- gev_mle(evd::rgev(10000, loc=0, scale=1, shape=0))
test
length(test)
length(test$estimate)
devtools::test()
devtools::test()
library(fitdistrib)
devtools::test().
devtools::test()
GLOBAL_min_years_data <- 30
devtools::test()
library(fitdistrib)
library(fitdistrib)
library('fitdistrib')
gev_mle(evd::rgev(10000, loc=0, scale=1, shape=0))
library(fitdistrib)
?gev_Lmom
devtools::test()
GLOBAL_min_years_data <- 30
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
test <- gl_mle(nsRFA::rand.genlogis(1000, 0, 1, 1))
test
test <- gl_Lmom(nsRFA::rand.genlogis(1000, 0, 1, 1))
test
devtools::test()
devtools::test()
?rgumbel
devtools::test()
library(fitdistrib)
?gumbel_bayes
devtools::test()
test <- gumbel_mle(evd::rgumbel(1000, loc=0, scale=1))
test
str(test)
?rgamma
library(fitdistrib)
GLOBAL_min_years_data <- 30
devtools::test()
library(fitdistrib)
GLOBAL_min_years_data <- 30
devtools::test()
devtools::test()
devtools::test()
install.packages(fitdistrib)
install.packages('fitdistrib')
install.packages("fitdistrib")
install.packages('fitdistrib')
library(fitdistrib)
devtools::test()
library(fitdistrib)
?gumbel_bayes
library(fitdistrib)
param <- parameters <- par.gamma(ll[1],ll[2],ll[4])
param <- parameters <- nsRFA::par.gamma(ll[1],ll[2],ll[4])
library("nsRFA")
data(hydroSIMN)
annualflows
summary(annualflows)
x <- annualflows["dato"][,]
fac <- factor(annualflows["cod"][,])
split(x,fac)
camp <- split(x,fac)$"45"
ll <- Lmoments(camp)
parameters <- par.gamma(ll[1],ll[2],ll[4])
f.gamma(1800,parameters$xi,parameters$beta,parameters$alfa)
F.gamma(1800,parameters$xi,parameters$beta,parameters$alfa)
invF.gamma(0.7511627,parameters$xi,parameters$beta,parameters$alfa)
Lmom.gamma(parameters$xi,parameters$beta,parameters$alfa)
rand.gamma(100,parameters$xi,parameters$beta,parameters$alfa)
parameters
devtools::test()
test <- pearson_mle(nsRFA::rand.gamma(100, 500, 100, 10))
test
devtools::test()
test <- pearson_mom(nsRFA::rand.gamma(1000, 500, 100, 10))
test
?moment_estimation
library(fitdistrib)
devtools::test()
dev.off()
?gamma
?rgamma
test <- gamma_mle(rgamma(1000, shape=1000, scale=1))
test
test <- gamma_mle(rgamma(1000, shape=100, scale=1))
test
?rand.genlogis
data(hydroSIMN)
annualflows
summary(annualflows)
x <- annualflows["dato"][,]
fac <- factor(annualflows["cod"][,])
split(x,fac)
camp <- split(x,fac)$"45"
ll <- Lmoments(camp)
parameters <- par.genlogis(ll[1],ll[2],ll[4])
f.genlogis(1800,parameters$xi,parameters$alfa,parameters$k)
F.genlogis(1800,parameters$xi,parameters$alfa,parameters$k)
invF.genlogis(0.7697433,parameters$xi,parameters$alfa,parameters$k)
Lmom.genlogis(parameters$xi,parameters$alfa,parameters$k)
rand.genlogis(100,parameters$xi,parameters$alfa,parameters$k)
parameters
test <- gl_mle(nsRFA::rand.genlogis(1000, 1000, 100, 0))
test
str(test)
devtools::test()
test <- gamma_mle(rgamma(1000, shape=100, scale=1))
test
devtools::test()
devtools::check()
devtools::test()
R.Version()
devtools::test()
library(fitdistrib)
devtools::test()
param <- c(0.1, 1, 0.1)
test <- gev_mom(evd::rgev(10000, loc=param[1], scale=param[2], shape=param[3]))
test
devtools::test()
test <- gev_Lmom(evd::rgev(10000, loc=param[1], scale=param[2], shape=param[3]))
test
test <- gev_Lmom(evd::rgev(10000, loc=param[1], scale=param[2], shape=param[3]))
test
devtools::test()
print(nsRFA::rand.genlogis(1000, param))
param <- c(0.1, 1, 0.1)
print(nsRFA::rand.genlogis(1000, param))
print(rand.genlogis(1000, param))
print(nsRFA::rand.genlogis(1000, param))
param <- c(100, 10, 0.1)
print(nsRFA::rand.genlogis(1000, param))
nsRFA::rand.genlogis(1000, param)
nsRFA::rand.genlogis(1000, param[1],param[2],param[3])
nsRFA::rand.genlogis(1000, as.vector(param))
devtools::test()
devtools::test()
devtools::test()
source(file.path(PROJHOME, 'utils', 'helper.r'))
source(gev.r)
source(./R/gev.r)
wd
?wd
x = c(12312,43242,3213,5423)
devtools::use_data(x)
rm(x)
load(x)
library(fitdistrib)
load(x)
x
r_path
appDir = getwd()
appDir
library(fitdistrib)
?gev_mle
library(fitdistrib)
?gev_mom
m <- ggplot(faithful, aes(x = eruptions, y = waiting)) +
stat_density_2d() + xlim(0.5, 6) + ylim(40, 110)
ggplotly(m)
library('plotly')
m <- ggplot(faithful, aes(x = eruptions, y = waiting)) +
stat_density_2d() + xlim(0.5, 6) + ylim(40, 110)
ggplotly(m)
